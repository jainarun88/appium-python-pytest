{"name": "test_searchProduct", "status": "broken", "statusDetails": {"message": "TypeError: not all arguments converted during string formatting", "trace": "self = <TestCases.test_flipkart_product_search.Test_SearchProduct object at 0x0000019D93D87C50>\n\n    def test_searchProduct(self):\n    \n        path = \"excel//testdata.xlsx\"\n        sheetProductSearch = \"ProductSearch\"\n        sheetCardDetails = \"CardDetails\"\n    \n        productName = getCellData(path,sheetProductSearch,2,1)\n        print(productName)\n        creditCardNumber = getCellData(path,sheetCardDetails,2,2)\n        creditCardExpiry = getCellData(path,sheetCardDetails,2,3)\n        creditCardCVV = getCellData(path,sheetCardDetails,2,4)\n        print(creditCardNumber)\n        print(creditCardExpiry)\n        print(creditCardCVV)\n    \n        # self.driver.implicitly_wait(30)\n        home = HomeScreen(self.driver)\n        # home.gotoSearchScreen().navigateToSearchScreen()\n        home.gotoSearchScreen().searchForProduct(productName)\n        time.sleep(1)\n        # home.gotoSearchScreen().closeNotificationPopup()\n        # home.gotoSearchScreen().closeLocationPopup()\n        # home.gotoSearchScreen().selectProduct(productName)\n        # home.gotoSearchScreen().addToCart()\n        # home.gotoSearchScreen().goToCart()\n        # home.gotoSearchScreen().placeOrder()\n    \n        # home.gotoSearchScreen().loginToApp(\"9754423998\")\n        home.gotoSearchScreen().goToMessageApp('emulator')\n>       home.gotoSearchScreen().otpRead('emulator')\n\nTestCases\\test_flipkart_product_search.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPages\\ProductScreen.py:202: in otpRead\n    log.logger.info(\"FLPKRT OTP is :: \", otp)\nC:\\Users\\HP\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\logging\\__init__.py:1489: in info\n    self._log(INFO, msg, args, **kwargs)\nC:\\Users\\HP\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\logging\\__init__.py:1634: in _log\n    self.handle(record)\nC:\\Users\\HP\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\logging\\__init__.py:1644: in handle\n    self.callHandlers(record)\nC:\\Users\\HP\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\logging\\__init__.py:1706: in callHandlers\n    hdlr.handle(record)\nC:\\Users\\HP\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\logging\\__init__.py:978: in handle\n    self.emit(record)\nC:\\Users\\HP\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\_pytest\\logging.py:372: in emit\n    super().emit(record)\nC:\\Users\\HP\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\logging\\__init__.py:1118: in emit\n    self.handleError(record)\nC:\\Users\\HP\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\logging\\__init__.py:1110: in emit\n    msg = self.format(record)\nC:\\Users\\HP\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\logging\\__init__.py:953: in format\n    return fmt.format(record)\nC:\\Users\\HP\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\_pytest\\logging.py:136: in format\n    return super().format(record)\nC:\\Users\\HP\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\logging\\__init__.py:687: in format\n    record.message = record.getMessage()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <LogRecord: Pages.ProductScreen, 20, E:\\WorkSpace\\appium-python-pytest\\Pages\\ProductScreen.py, 202, \"FLPKRT OTP is :: \">\n\n    def getMessage(self):\n        \"\"\"\n        Return the message for this LogRecord.\n    \n        Return the message for this LogRecord after merging any user-supplied\n        arguments with the message.\n        \"\"\"\n        msg = str(self.msg)\n        if self.args:\n>           msg = msg % self.args\nE           TypeError: not all arguments converted during string formatting\n\nC:\\Users\\HP\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\logging\\__init__.py:377: TypeError"}, "attachments": [{"name": "log", "source": "ece79b66-4b63-4b1e-b99b-8f6c82259dcd-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "9577ebcf-23f7-480f-aefe-94eac51ee8bd-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "cc2b7107-1ff4-4e53-9073-c26b1fbc9b04-attachment.txt", "type": "text/plain"}], "start": 1721325682450, "stop": 1721325713801, "uuid": "22d0a5fb-750f-49f3-94a7-c1ba6dfdd4e5", "historyId": "d60e08e81c515319275bdba3f6b2ec30", "testCaseId": "d60e08e81c515319275bdba3f6b2ec30", "fullName": "test_flipkart_product_search.Test_SearchProduct#test_searchProduct", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('log_on_failure', 'appium_driver')"}, {"name": "suite", "value": "test_flipkart_product_search"}, {"name": "subSuite", "value": "Test_SearchProduct"}, {"name": "host", "value": "ATIVS"}, {"name": "thread", "value": "1748-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_flipkart_product_search"}]}